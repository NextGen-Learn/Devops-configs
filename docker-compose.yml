version: '3.8'

services:
  db:
    image: postgres:latest
    container_name: postgres_service_nextgenlearn
    environment:
      POSTGRES_DB: ngl
      POSTGRES_USER: userngl
      POSTGRES_PASSWORD: 1234
    ports:
      - "5433:5432" 

  post-service:
    build: ./Post-service
    container_name: post_service_nextgenlearn
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./Post-service:/app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_NAME=ngl
      - DATABASE_USER=userngl
      - DATABASE_PASSWORD=1234
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db

  user-service:
    build: ./User-service
    container_name: user_service_nextgenlearn
    command: python manage.py runserver 0.0.0.0:8001
    volumes:
      - ./User-service:/app
    ports:
      - "8001:8001"
    
  ribbon-service:
    build: ./Ribbon-service
    container_name: ribbon_service_nextgenlearn
    command: python manage.py runserver 0.0.0.0:8002
    volumes:
      - ./Ribbon-service:/app
    ports:
      - "8002:8002"
  
  review-service:
    build: ./Review-service
    container_name: review_service_nextgenlearn
    command: python manage.py runserver 0.0.0.0:8003
    volumes:
      - ./Review-service:/app
    ports:
      - "8003:8003"

  about-service:
    build:
      context: ./About-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
      
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=development
    volumes:
      - ./About-service:/app

  frontend:
    build: ./Frontend
    container_name: frontend_nextgenlearn
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true

volumes:
  postgres_data:
